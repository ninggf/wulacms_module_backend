function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

layui.define(['layer', 'table', 'util', 'admin', 'notice'], function (exports) {
  var $ = layui.jquery;
  var layer = layui.layer;
  var table = layui.table;
  var admin = layui.admin;
  var notice = layui.notice;

  var Grant = /*#__PURE__*/function () {
    function Grant() {
      _defineProperty(this, "grantListTable", void 0);

      _defineProperty(this, "insXmSel", void 0);

      _defineProperty(this, "selRid", void 0);
    }

    var _proto = Grant.prototype;

    _proto.init = function init() {
      this.selRid = $('#saveBtn').data('rid');
      this.grantListTable = table.render({
        id: 'grantList',
        url: admin.url('backend/role/grant-list'),
        where: {
          rid: this.selRid
        },
        treeDefaultClose: false,
        treeLinkage: false,
        elem: '#grantTable',
        defaultToolbar: [],
        cellMinWidth: 100,
        page: false,
        cols: [[{
          field: 'name',
          title: '',
          width: 180,
          sort: false,
          templet: function templet(d) {
            var space = ['', '&emsp;', '&emsp;&emsp;'];
            return space[d.level] + d.name;
          }
        }, {
          field: 'op',
          title: _t('Permissions'),
          sort: false,
          templet: function templet(d) {
            var html = '';
            var op;
            var topResId;

            for (op in d.ops) {
              var resId = d.ops[op]['resId'];

              if (op === 'r') {
                topResId = resId;
              }

              html += '<input data-level="' + d.level + '" class="authCheckbox ' + topResId + '" ' + d.ops[op]['checkbox'] + ' type="checkbox" title=' + d.ops[op]['name'] + ' name="grant" value="' + resId + '" > &nbsp;';
            }

            return html;
          }
        }]],
        done: function done(e) {
          var checkbox = $('.authCheckbox').siblings('div.layui-form-checkbox');
          checkbox.css('height', '24px');
          checkbox.css('line-height', '24px');
          checkbox.children('span').css('font-size', '12px');
          checkbox.children('span').css('padding', '0 6px');
          checkbox.children('i').css('height', '24px');
          $('.grantBtn').click(function () {
            grant.save();
          });
        }
      });
    };

    //保存
    _proto.save = function save() {
      var obj = $('.authCheckbox');
      var grant = [];
      obj.each(function () {
        if ($(this).next('div.layui-form-checkbox').hasClass('layui-form-checked')) {
          grant.push($(this).val());
        }
      });
      var loadIndex = layer.load(2);
      admin.post(admin.url('backend/role/grant-save'), {
        'rid': this.selRid,
        'grants': grant
      }).then(function (data) {
        layer.close(loadIndex);

        if (data.code === 200) {
          notice.success('授权成功！');
        } else {
          notice.error(data.message);
        }
      }).fail(function (data) {
        notice.error(data.message);
      });
    };

    return Grant;
  }();

  var grant = new Grant();
  exports('@backend.grant', grant);
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
